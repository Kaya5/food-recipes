{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js","styles/recipe.module.css"],"names":["Recipe","name","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","input","setInput","query","setQuery","title","setTitle","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQAqBeA,EAlBA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvC,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,6BAAKN,IACL,oBAAGI,UAAWC,IAAMJ,SAApB,UACE,0CADF,IACoBA,KAEpB,6BACGE,EAAYI,KAAI,SAACC,GAAD,OACf,6BAAKA,EAAWC,YAIpB,qBAAKC,IAAKR,EAAOS,IAAI,S,gBC+DZC,EAxEH,WACV,IAIA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAS,2CAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MAEC,CAACL,IAEJ,IAAMK,EAAU,uCAAG,gCAAAC,EAAA,sEACMC,MAAM,uDAAD,OAC6BP,EAD7B,mBAff,WAee,oBAdd,qCAaG,cACXQ,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKXC,EAAOD,EAAKC,KAElBd,EAAWc,GACXC,QAAQC,IAAIH,GARK,2CAAH,qDAuBhB,OAEE,cADA,CACA,OAAKxB,UAAYgB,EAAkB,MAAV,QAAzB,UACE,uBAAMhB,UAAU,OAAO4B,SAXN,SAACC,GACpBA,EAAEC,iBAEFf,EAASH,GACTC,EAAS,IACTI,EAAS,KAMP,UACE,uBACEjB,UAAU,aACV+B,KAAK,OACLC,MAAOpB,EACPqB,SApBY,SAACJ,GACnBhB,EAASgB,EAAEK,OAAOF,QAoBZG,YAAY,qCAEd,wBAAQnC,UAAU,SAAS+B,KAAK,SAAhC,uBAKF,qBAAK/B,UAAU,UAAf,SAEGU,EAAQP,KAAI,SAACD,GAAD,OACX,cAAC,EAAD,CAEEN,KAAMM,EAAOA,OAAOkC,MACpBtC,MAAOI,EAAOA,OAAOJ,MACrBD,SAAUK,EAAOA,OAAOL,SACxBE,YAAaG,EAAOA,OAAOH,aAJtBsC,oBASX,qBAAKrC,UAAWgB,EAAQ,QAAU,WAAlC,SAA+CA,QC9DtCsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,4B","file":"static/js/main.8418709d.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"../styles/recipe.module.css\";\n\nconst Recipe = ({ name, calories, image, ingredients }) => {\n  return (\n    <div className={style.recipe}>\n      <h2>{name}</h2>\n      <i className={style.calories}>\n        <b>Calories:</b> {calories}\n      </i>\n      <ul>\n        {ingredients.map((ingredient) => (\n          <li>{ingredient.text}</li>\n        ))}\n      </ul>\n\n      <img src={image} alt=\"\" />\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./components/Recipe\";\nimport \"./App.css\";\n// import uuid from \"uuid/v4\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst App = () => {\n  const APP_ID = \"aa2b90bb\";\n  const APP_KEY = \"85c65e9d285e9a1dfce74f3cfbcddf7d\";\n\n  //all the data returned is saved in this 'recipes' array.\n  const [recipes, setRecipes] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [title, setTitle] = useState(\"The world's number One Food Recipes App\");\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json(); //returns a format that is easy to work with.\n    const hits = data.hits;\n    //setting the state of recipes to the returned data under 'hits'\n    setRecipes(hits);\n    console.log(data);\n  };\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  const searchResult = (e) => {\n    e.preventDefault();\n    //search ONLY the finished input.\n    setQuery(input);\n    setInput(\"\");\n    setTitle(\"\");\n  };\n\n  return (\n    // <div className='App'>\n    <div className={!title ? \"no-bg\" : \"App\"}>\n      <form className=\"form\" onSubmit={searchResult}>\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={input}\n          onChange={handleInput}\n          placeholder=\"Enter ingredient... (e.g. bread)\"\n        />\n        <button className=\"button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <div className=\"recipes\">\n        {/* mapping over all the individual recipes contained in the array */}\n        {recipes.map((recipe) => (\n          <Recipe\n            key={uuidv4()}\n            name={recipe.recipe.label}\n            image={recipe.recipe.image}\n            calories={recipe.recipe.calories}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n\n      <div className={title ? \"title\" : \"no-title\"}>{title}</div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__iQSBG\",\"calories\":\"recipe_calories__OjF-q\"};"],"sourceRoot":""}